[{"C:\\Users\\User\\Documents\\공부\\React\\todo2\\src\\index.js":"1","C:\\Users\\User\\Documents\\공부\\React\\todo2\\src\\containers\\TodoApp.js":"2","C:\\Users\\User\\Documents\\공부\\React\\todo2\\src\\reducers\\tasks.js":"3","C:\\Users\\User\\Documents\\공부\\React\\todo2\\src\\actions\\tasks.js":"4","C:\\Users\\User\\Documents\\공부\\React\\todo2\\src\\components\\TodoApp.js":"5"},{"size":943,"mtime":1676381618311,"results":"6","hashOfConfig":"7"},{"size":536,"mtime":1676383833168,"results":"8","hashOfConfig":"7"},{"size":504,"mtime":1676386712438,"results":"9","hashOfConfig":"7"},{"size":277,"mtime":1676386722254,"results":"10","hashOfConfig":"7"},{"size":1895,"mtime":1676564354820,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"16"},"ncmeqn",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\User\\Documents\\공부\\React\\todo2\\src\\index.js",["29","30"],[],"import React from 'react';\nimport { Provider } from 'react-redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport ReactDOM from 'react-dom/client';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport tasksReducer from './reducers/tasks';\nimport TodoApp from './containers/TodoApp';\n\n\nconst storageMiddleware = store => next => action => {\n  const result = next(action);\n  window.localStorage.setItem('app-state', JSON.stringify(store.getState()));\n  return result;\n};\n\nconst savedState = JSON.parse(localStorage.getItem('app-state'));\nconst store = configureStore({\n  reducer: tasksReducer,\n  //preloadedState: savedState ? savedState : tasksReducer(undefined, {type: 'INIT'}),\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger, thunk)\n});\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Provider store={store}>\n    <TodoApp />\n  </Provider>\n);\n",[],"C:\\Users\\User\\Documents\\공부\\React\\todo2\\src\\containers\\TodoApp.js",[],[],"C:\\Users\\User\\Documents\\공부\\React\\todo2\\src\\reducers\\tasks.js",[],[],"C:\\Users\\User\\Documents\\공부\\React\\todo2\\src\\actions\\tasks.js",[],[],"C:\\Users\\User\\Documents\\공부\\React\\todo2\\src\\components\\TodoApp.js",[],[],{"ruleId":"31","severity":1,"message":"32","line":11,"column":7,"nodeType":"33","messageId":"34","endLine":11,"endColumn":24},{"ruleId":"31","severity":1,"message":"35","line":17,"column":7,"nodeType":"33","messageId":"34","endLine":17,"endColumn":17},"no-unused-vars","'storageMiddleware' is assigned a value but never used.","Identifier","unusedVar","'savedState' is assigned a value but never used."]