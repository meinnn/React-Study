{"ast":null,"code":"/**\n * This action type will be dispatched by the history actions below.\n * If you're writing a middleware to watch for navigation events, be sure to\n * look for actions of this type.\n */\nexport var CALL_HISTORY_METHOD = '@@router/CALL_HISTORY_METHOD';\nfunction updateLocation(method) {\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return {\n      type: CALL_HISTORY_METHOD,\n      payload: {\n        method: method,\n        args: args\n      }\n    };\n  };\n}\n\n/**\n * These actions correspond to the history API.\n * The associated routerMiddleware will capture these events before they get to\n * your reducer and reissue them as the matching function on your history.\n */\nexport var push = updateLocation('push');\nexport var replace = updateLocation('replace');\nexport var go = updateLocation('go');\nexport var goBack = updateLocation('goBack');\nexport var goForward = updateLocation('goForward');\nexport var routerActions = {\n  push: push,\n  replace: replace,\n  go: go,\n  goBack: goBack,\n  goForward: goForward\n};","map":{"version":3,"names":["CALL_HISTORY_METHOD","updateLocation","method","_len","arguments","length","args","Array","_key","type","payload","push","replace","go","goBack","goForward","routerActions"],"sources":["C:/Users/User/Documents/공부/React/todo2/node_modules/react-router-redux/es/actions.js"],"sourcesContent":["\n/**\n * This action type will be dispatched by the history actions below.\n * If you're writing a middleware to watch for navigation events, be sure to\n * look for actions of this type.\n */\nexport var CALL_HISTORY_METHOD = '@@router/CALL_HISTORY_METHOD';\n\nfunction updateLocation(method) {\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return {\n      type: CALL_HISTORY_METHOD,\n      payload: { method: method, args: args }\n    };\n  };\n}\n\n/**\n * These actions correspond to the history API.\n * The associated routerMiddleware will capture these events before they get to\n * your reducer and reissue them as the matching function on your history.\n */\nexport var push = updateLocation('push');\nexport var replace = updateLocation('replace');\nexport var go = updateLocation('go');\nexport var goBack = updateLocation('goBack');\nexport var goForward = updateLocation('goForward');\n\nexport var routerActions = { push: push, replace: replace, go: go, goBack: goBack, goForward: goForward };"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIA,mBAAmB,GAAG,8BAA8B;AAE/D,SAASC,cAAc,CAACC,MAAM,EAAE;EAC9B,OAAO,YAAY;IACjB,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAGC,KAAK,CAACJ,IAAI,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;MACnFF,IAAI,CAACE,IAAI,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC;IAC9B;IAEA,OAAO;MACLC,IAAI,EAAET,mBAAmB;MACzBU,OAAO,EAAE;QAAER,MAAM,EAAEA,MAAM;QAAEI,IAAI,EAAEA;MAAK;IACxC,CAAC;EACH,CAAC;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAIK,IAAI,GAAGV,cAAc,CAAC,MAAM,CAAC;AACxC,OAAO,IAAIW,OAAO,GAAGX,cAAc,CAAC,SAAS,CAAC;AAC9C,OAAO,IAAIY,EAAE,GAAGZ,cAAc,CAAC,IAAI,CAAC;AACpC,OAAO,IAAIa,MAAM,GAAGb,cAAc,CAAC,QAAQ,CAAC;AAC5C,OAAO,IAAIc,SAAS,GAAGd,cAAc,CAAC,WAAW,CAAC;AAElD,OAAO,IAAIe,aAAa,GAAG;EAAEL,IAAI,EAAEA,IAAI;EAAEC,OAAO,EAAEA,OAAO;EAAEC,EAAE,EAAEA,EAAE;EAAEC,MAAM,EAAEA,MAAM;EAAEC,SAAS,EAAEA;AAAU,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}