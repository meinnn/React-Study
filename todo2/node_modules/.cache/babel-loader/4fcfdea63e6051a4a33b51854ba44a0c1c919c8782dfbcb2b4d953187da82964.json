{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\\\uACF5\\uBD80\\\\React\\\\todo2\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Route, Routes } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'react-router-redux';\nimport { createBrowserHistory } from 'history';\nimport TodoApp from './containers/TodoApp';\nimport Error from './components/Error';\nimport createStore from './store';\n\n// history 인스턴스 생성\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst history = createBrowserHistory();\n// 스토어 생성\nconst store = createStore(history);\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(ConnectedRouter, {\n    store: store,\n    history: history,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: TodoApp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/error\",\n          component: Error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["React","ReactDOM","Route","Routes","Provider","ConnectedRouter","createBrowserHistory","TodoApp","Error","createStore","history","store","root","createRoot","document","getElementById","render"],"sources":["C:/Users/User/Documents/공부/React/todo2/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { Route, Routes } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'react-router-redux';\nimport { createBrowserHistory } from 'history';\nimport TodoApp from './containers/TodoApp';\nimport Error from './components/Error';\nimport createStore from './store';\n\n\n// history 인스턴스 생성\nconst history = createBrowserHistory();\n// 스토어 생성\nconst store = createStore(history);\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <Provider store={store}>\n    <ConnectedRouter store={store} history={history}>\n      <div>\n        {/* 라우팅하기 */}\n        <Routes>\n          <Route exact path=\"/\" component={TodoApp} />\n          <Route exact path=\"/error\" component={Error} />\n        </Routes>\n      </div>\n    </ConnectedRouter>\n  </Provider>\n);\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChD,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,eAAe,QAAQ,oBAAoB;AACpD,SAASC,oBAAoB,QAAQ,SAAS;AAC9C,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,WAAW,MAAM,SAAS;;AAGjC;AAAA;AACA,MAAMC,OAAO,GAAGJ,oBAAoB,EAAE;AACtC;AACA,MAAMK,KAAK,GAAGF,WAAW,CAACC,OAAO,CAAC;AAGlC,MAAME,IAAI,GAAGX,QAAQ,CAACY,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACT,QAAC,QAAQ;EAAC,KAAK,EAAEL,KAAM;EAAA,uBACrB,QAAC,eAAe;IAAC,KAAK,EAAEA,KAAM;IAAC,OAAO,EAAED,OAAQ;IAAA,uBAC9C;MAAA,uBAEE,QAAC,MAAM;QAAA,wBACL,QAAC,KAAK;UAAC,KAAK;UAAC,IAAI,EAAC,GAAG;UAAC,SAAS,EAAEH;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAG,eAC5C,QAAC,KAAK;UAAC,KAAK;UAAC,IAAI,EAAC,QAAQ;UAAC,SAAS,EAAEC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA;IACxC;MAAA;MAAA;MAAA;IAAA;EACL;IAAA;IAAA;IAAA;EAAA;AACU;EAAA;EAAA;EAAA;AAAA,QACT,CACZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}