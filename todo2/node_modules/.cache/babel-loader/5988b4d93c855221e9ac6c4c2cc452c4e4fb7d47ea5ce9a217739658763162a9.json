{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\n\n/**\n * This action type will be dispatched when your history\n * receives a location change.\n */\nexport var LOCATION_CHANGE = '@@router/LOCATION_CHANGE';\nvar initialState = {\n  location: null\n\n  /**\n   * This reducer will update the state with the most recent location history\n   * has transitioned to. This may not be in sync with the router, particularly\n   * if you have asynchronously-loaded routes, so reading from and relying on\n   * this state is discouraged.\n   */\n};\nexport function routerReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n    type = _ref.type,\n    payload = _ref.payload;\n  if (type === LOCATION_CHANGE) {\n    return _extends({}, state, {\n      location: payload\n    });\n  }\n  return state;\n}","map":{"version":3,"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","LOCATION_CHANGE","initialState","location","routerReducer","state","undefined","_ref","type","payload"],"sources":["C:/Users/User/Documents/공부/React/todo2/node_modules/react-router-redux/es/reducer.js"],"sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n/**\n * This action type will be dispatched when your history\n * receives a location change.\n */\nexport var LOCATION_CHANGE = '@@router/LOCATION_CHANGE';\n\nvar initialState = {\n  location: null\n\n  /**\n   * This reducer will update the state with the most recent location history\n   * has transitioned to. This may not be in sync with the router, particularly\n   * if you have asynchronously-loaded routes, so reading from and relying on\n   * this state is discouraged.\n   */\n};export function routerReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      type = _ref.type,\n      payload = _ref.payload;\n\n  if (type === LOCATION_CHANGE) {\n    return _extends({}, state, { location: payload });\n  }\n\n  return state;\n}"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAAUC,MAAM,EAAE;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;IAAE,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAC,CAAC;IAAE,KAAK,IAAII,GAAG,IAAID,MAAM,EAAE;MAAE,IAAIN,MAAM,CAACQ,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,MAAM,EAAEC,GAAG,CAAC,EAAE;QAAEL,MAAM,CAACK,GAAG,CAAC,GAAGD,MAAM,CAACC,GAAG,CAAC;MAAE;IAAE;EAAE;EAAE,OAAOL,MAAM;AAAE,CAAC;;AAEhQ;AACA;AACA;AACA;AACA,OAAO,IAAIS,eAAe,GAAG,0BAA0B;AAEvD,IAAIC,YAAY,GAAG;EACjBC,QAAQ,EAAE;;EAEV;AACF;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,OAAO,SAASC,aAAa,GAAG;EAChC,IAAIC,KAAK,GAAGX,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKY,SAAS,GAAGZ,SAAS,CAAC,CAAC,CAAC,GAAGQ,YAAY;EAE5F,IAAIK,IAAI,GAAGb,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKY,SAAS,GAAGZ,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7Ec,IAAI,GAAGD,IAAI,CAACC,IAAI;IAChBC,OAAO,GAAGF,IAAI,CAACE,OAAO;EAE1B,IAAID,IAAI,KAAKP,eAAe,EAAE;IAC5B,OAAOZ,QAAQ,CAAC,CAAC,CAAC,EAAEgB,KAAK,EAAE;MAAEF,QAAQ,EAAEM;IAAQ,CAAC,CAAC;EACnD;EAEA,OAAOJ,KAAK;AACd"},"metadata":{},"sourceType":"module","externalDependencies":[]}